LC 33. Search Element in a Rotated Sorted Array

jatin_369
1
an hour ago
C++
Intuition
Code ka mool uddeshya ek modified binary search algorithm ka istemal karna hai, jisse ek sort aur rotated array mein target element ka index mil sake. Yeh algorithm istemal karta hai ki kam se kam ek array ka adha hissa toh hamesha sorted hota hai, chahe pura array rotate kyun na ho.

Approach
Code mein modified binary search ka upayog ek sorted aur rotated array mein target element ka index dhundhne ke liye kiya gaya hai. Har kadam mein yeh check karta hai ki left ya right half sorted hai ya nahi, aur pointers ko usi ke hisab se adjust karta hai.

Complexity
Time complexity: O(log n)
Space complexity: O(1)
Code
class Solution {
public:
    int search(vector<int>& nums, int target) {
        int low = 0;
        int high = nums.size() - 1;
        
        while (low <= high) {
            int mid = low + (high - low) / 2;
            if (nums[mid] == target) {
                return mid;
            }
            if (nums[low] <= nums[mid]) {
                if (nums[low] <= target && target <= nums[mid]) {
                    high = mid - 1;
                } else {
                    low = mid + 1;
                }
            } else {
                if (nums[mid] <= target && target <= nums[high]) {
                    low = mid + 1;
                } else {
                    high = mid - 1;
                }
            }
        }
        
        return -1;
    }
};
