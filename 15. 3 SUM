15. 3 SUM

jatin_369
2
an hour ago
C++
Intuition
Mera pehla vichar yeh hai ki hum teen alag-alag elements ka sum lekar zero banane wale tino-element combinations ko dhundh sakte hain.

Approach
Approach mein yeh hai ki sabse pehle hum array ko sort karenge. Fir hum teeno pointers ka istemal karenge: ek fixed pointer (i), ek left pointer (j), aur ek right pointer (k). Hum fixed pointer ko iterate karenge, aur left aur right pointers ko aise move karenge ki teeno elements ka sum zero banaye.

Complexity
Time complexity: O(n^2)
Space complexity: O(1)
Code
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> result;
        
        int n = nums.size();
        if (n < 3) {
            return result;
        }
        
        sort(nums.begin(), nums.end());
        
        for (int i = 0; i < n - 2; i++) {
            if (nums[i] > 0) {
                break;
            }
            if (i > 0 && nums[i - 1] == nums[i]) {
                continue;
            }
            
            int j = i + 1;
            int k = n - 1;
            
            while (j < k) {
                int sum = nums[i] + nums[j] + nums[k];
                
                if (sum < 0) {
                    j++;
                } else if (sum > 0) {
                    k--;
                } else {
                    result.push_back({nums[i], nums[j], nums[k]});
                    
                    while (j < k && nums[j] == nums[j + 1]) {
                        j++;
                    }
                    j++;
                    
                    while (j < k && nums[k - 1] == nums[k]) {
                        k--;
                    }
                    k--;
                }
            }
        }
        
        return result;
    }
};
